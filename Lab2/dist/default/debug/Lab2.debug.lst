

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 26 14:12:59 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     008F                     OSCCON          equ	143	;# 
   100     0090                     OSCTUNE         equ	144	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0093                     SSPMSK          equ	147	;# 
   105     0093                     MSK             equ	147	;# 
   106     0094                     SSPSTAT         equ	148	;# 
   107     0095                     WPUB            equ	149	;# 
   108     0096                     IOCB            equ	150	;# 
   109     0097                     VRCON           equ	151	;# 
   110     0098                     TXSTA           equ	152	;# 
   111     0099                     SPBRG           equ	153	;# 
   112     009A                     SPBRGH          equ	154	;# 
   113     009B                     PWM1CON         equ	155	;# 
   114     009C                     ECCPAS          equ	156	;# 
   115     009D                     PSTRCON         equ	157	;# 
   116     009E                     ADRESL          equ	158	;# 
   117     009F                     ADCON1          equ	159	;# 
   118     0105                     WDTCON          equ	261	;# 
   119     0107                     CM1CON0         equ	263	;# 
   120     0108                     CM2CON0         equ	264	;# 
   121     0109                     CM2CON1         equ	265	;# 
   122     010C                     EEDATA          equ	268	;# 
   123     010C                     EEDAT           equ	268	;# 
   124     010D                     EEADR           equ	269	;# 
   125     010E                     EEDATH          equ	270	;# 
   126     010F                     EEADRH          equ	271	;# 
   127     0185                     SRCON           equ	389	;# 
   128     0187                     BAUDCTL         equ	391	;# 
   129     0188                     ANSEL           equ	392	;# 
   130     0189                     ANSELH          equ	393	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     0008                     PORTD           equ	8	;# 
   142     0009                     PORTE           equ	9	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000D                     PIR2            equ	13	;# 
   147     000E                     TMR1            equ	14	;# 
   148     000E                     TMR1L           equ	14	;# 
   149     000F                     TMR1H           equ	15	;# 
   150     0010                     T1CON           equ	16	;# 
   151     0011                     TMR2            equ	17	;# 
   152     0012                     T2CON           equ	18	;# 
   153     0013                     SSPBUF          equ	19	;# 
   154     0014                     SSPCON          equ	20	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001B                     CCPR2           equ	27	;# 
   163     001B                     CCPR2L          equ	27	;# 
   164     001C                     CCPR2H          equ	28	;# 
   165     001D                     CCP2CON         equ	29	;# 
   166     001E                     ADRESH          equ	30	;# 
   167     001F                     ADCON0          equ	31	;# 
   168     0081                     OPTION_REG      equ	129	;# 
   169     0085                     TRISA           equ	133	;# 
   170     0086                     TRISB           equ	134	;# 
   171     0087                     TRISC           equ	135	;# 
   172     0088                     TRISD           equ	136	;# 
   173     0089                     TRISE           equ	137	;# 
   174     008C                     PIE1            equ	140	;# 
   175     008D                     PIE2            equ	141	;# 
   176     008E                     PCON            equ	142	;# 
   177     008F                     OSCCON          equ	143	;# 
   178     0090                     OSCTUNE         equ	144	;# 
   179     0091                     SSPCON2         equ	145	;# 
   180     0092                     PR2             equ	146	;# 
   181     0093                     SSPADD          equ	147	;# 
   182     0093                     SSPMSK          equ	147	;# 
   183     0093                     MSK             equ	147	;# 
   184     0094                     SSPSTAT         equ	148	;# 
   185     0095                     WPUB            equ	149	;# 
   186     0096                     IOCB            equ	150	;# 
   187     0097                     VRCON           equ	151	;# 
   188     0098                     TXSTA           equ	152	;# 
   189     0099                     SPBRG           equ	153	;# 
   190     009A                     SPBRGH          equ	154	;# 
   191     009B                     PWM1CON         equ	155	;# 
   192     009C                     ECCPAS          equ	156	;# 
   193     009D                     PSTRCON         equ	157	;# 
   194     009E                     ADRESL          equ	158	;# 
   195     009F                     ADCON1          equ	159	;# 
   196     0105                     WDTCON          equ	261	;# 
   197     0107                     CM1CON0         equ	263	;# 
   198     0108                     CM2CON0         equ	264	;# 
   199     0109                     CM2CON1         equ	265	;# 
   200     010C                     EEDATA          equ	268	;# 
   201     010C                     EEDAT           equ	268	;# 
   202     010D                     EEADR           equ	269	;# 
   203     010E                     EEDATH          equ	270	;# 
   204     010F                     EEADRH          equ	271	;# 
   205     0185                     SRCON           equ	389	;# 
   206     0187                     BAUDCTL         equ	391	;# 
   207     0188                     ANSEL           equ	392	;# 
   208     0189                     ANSELH          equ	393	;# 
   209     018C                     EECON1          equ	396	;# 
   210     018D                     EECON2          equ	397	;# 
   211                           
   212                           	psect	strings
   213     0069                     __pstrings:
   214     0069                     stringtab:
   215     0069                     __stringtab:
   216     0069                     stringcode:	
   217                           ;	String table - string pointers are 1 byte each
   218                           
   219     0069                     stringdir:
   220     0069  3000               	movlw	high stringdir
   221     006A  008A               	movwf	10
   222     006B  0804               	movf	4,w
   223     006C  0A84               	incf	4,f
   224     006D  0782               	addwf	2,f
   225     006E                     __stringbase:
   226     006E  3400               	retlw	0
   227     006F                     __end_of__stringtab:
   228     006F                     _segment_map:
   229     006F  343F               	retlw	63
   230     0070  3421               	retlw	33
   231     0071  3476               	retlw	118
   232     0072  3473               	retlw	115
   233     0073  3469               	retlw	105
   234     0074  345B               	retlw	91
   235     0075  345F               	retlw	95
   236     0076  3439               	retlw	57
   237     0077  347F               	retlw	127
   238     0078  347B               	retlw	123
   239     0079                     __end_of_segment_map:
   240     0006                     _PORTB          set	6
   241     000B                     _INTCON         set	11
   242     0008                     _PORTD          set	8
   243     0007                     _PORTC          set	7
   244     0086                     _TRISB          set	134
   245     0087                     _TRISC          set	135
   246     0088                     _TRISD          set	136
   247     04B1                     _IOCB1          set	1201
   248     04B0                     _IOCB0          set	1200
   249     0189                     _ANSELH         set	393
   250     0188                     _ANSEL          set	392
   251                           
   252                           	psect	cinit
   253     000F                     start_initialization:	
   254                           ; #config settings
   255                           
   256     000F                     __initialization:
   257     000F                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260     000F                     __end_of__initialization:
   261     000F  0183               	clrf	3
   262     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	cstackCOMMON
   265     0070                     __pcstackCOMMON:
   266     0070                     ?_main:
   267     0070                     ?_ISR:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     ??_ISR:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275     0070                     	ds	3
   276     0073                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x3
   279     0073                     	ds	3
   280     0076                     main@i:
   281                           
   282                           ; 1 bytes @ 0x6
   283     0076                     	ds	1
   284                           
   285                           	psect	maintext
   286     0013                     __pmaintext:	
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 54 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  i               1    6[COMMON] unsigned char 
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   301 ;; Tracked objects:
   302 ;;		On entry : B00/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   306 ;;      Params:         0       0       0       0       0
   307 ;;      Locals:         1       0       0       0       0
   308 ;;      Temps:          3       0       0       0       0
   309 ;;      Totals:         4       0       0       0       0
   310 ;;Total ram usage:        4 bytes
   311 ;; Hardware stack levels required when called: 1
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319     0013                     _main:	
   320                           ;psect for function _main
   321                           
   322     0013                     l644:	
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   325                           
   326                           
   327                           ;main.c: 55:     ANSEL = 0;
   328     0013  1683               	bsf	3,5	;RP0=1, select bank3
   329     0014  1703               	bsf	3,6	;RP1=1, select bank3
   330     0015  0188               	clrf	8	;volatile
   331                           
   332                           ;main.c: 56:     ANSELH = 0;
   333     0016  0189               	clrf	9	;volatile
   334                           
   335                           ;main.c: 58:     TRISD = 0b00000000;
   336     0017  1683               	bsf	3,5	;RP0=1, select bank1
   337     0018  1303               	bcf	3,6	;RP1=0, select bank1
   338     0019  0188               	clrf	8	;volatile
   339                           
   340                           ;main.c: 59:     TRISC = 0b00000000;
   341     001A  0187               	clrf	7	;volatile
   342     001B                     l646:
   343                           
   344                           ;main.c: 60:     TRISB = 0b00000011;
   345     001B  3003               	movlw	3
   346     001C  0086               	movwf	6	;volatile
   347     001D                     l648:
   348                           
   349                           ;main.c: 62:     INTCON |= 1<<7;
   350     001D  178B               	bsf	11,7	;volatile
   351     001E                     l650:
   352                           
   353                           ;main.c: 64:     INTCON |= 1<<3;
   354     001E  158B               	bsf	11,3	;volatile
   355     001F                     l652:
   356                           
   357                           ;main.c: 66:     IOCB0 = 1;
   358     001F  1416               	bsf	22,0	;volatile
   359     0020                     l654:
   360                           
   361                           ;main.c: 67:     IOCB1 = 1;
   362     0020  1496               	bsf	22,1	;volatile
   363     0021                     l36:	
   364                           ;main.c: 70:     while (1) {
   365                           
   366                           
   367                           ;main.c: 72:         for (uint8_t i = 0; i <= 9; i++) {
   368     0021  01F6               	clrf	main@i
   369     0022                     l660:
   370                           
   371                           ;main.c: 74:             PORTD = segment_map[i];
   372     0022  0876               	movf	main@i,w
   373     0023  3E01               	addlw	low ((_segment_map-__stringbase)| (0+32768))
   374     0024  0084               	movwf	4
   375     0025  120A  118A  2069  120A  118A  	fcall	stringdir
   376     002A  1283               	bcf	3,5	;RP0=0, select bank0
   377     002B  1303               	bcf	3,6	;RP1=0, select bank0
   378     002C  0088               	movwf	8	;volatile
   379     002D                     l662:
   380                           
   381                           ;main.c: 75:             _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   382     002D  3006               	movlw	6
   383     002E  00F5               	movwf	??_main+2
   384     002F  3013               	movlw	19
   385     0030  00F4               	movwf	??_main+1
   386     0031  30AD               	movlw	173
   387     0032  00F3               	movwf	??_main
   388     0033                     u77:
   389     0033  0BF3               	decfsz	??_main,f
   390     0034  2833               	goto	u77
   391     0035  0BF4               	decfsz	??_main+1,f
   392     0036  2833               	goto	u77
   393     0037  0BF5               	decfsz	??_main+2,f
   394     0038  2833               	goto	u77
   395     0039  283A               	nop2
   396     003A                     l664:
   397                           
   398                           ;main.c: 76:         }
   399     003A  3001               	movlw	1
   400     003B  07F6               	addwf	main@i,f
   401     003C                     l666:
   402     003C  300A               	movlw	10
   403     003D  0276               	subwf	main@i,w
   404     003E  1C03               	skipc
   405     003F  2841               	goto	u61
   406     0040  2842               	goto	u60
   407     0041                     u61:
   408     0041  2822               	goto	l660
   409     0042                     u60:
   410     0042  2821               	goto	l36
   411     0043  120A  118A  280C   	ljmp	start
   412     0046                     __end_of_main:
   413                           
   414                           	psect	text1
   415     0046                     __ptext1:	
   416 ;; *************** function _ISR *****************
   417 ;; Defined at:
   418 ;;		line 83 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          3       0       0       0       0
   435 ;;      Totals:         3       0       0       0       0
   436 ;;Total ram usage:        3 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		Interrupt level 1
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445     0046                     _ISR:	
   446                           ;psect for function _ISR
   447                           
   448     0046                     i1l634:
   449                           
   450                           ;main.c: 84:     if (0 == ((PORTB >> 0) & 1)) {
   451     0046  1283               	bcf	3,5	;RP0=0, select bank0
   452     0047  1303               	bcf	3,6	;RP1=0, select bank0
   453     0048  1806               	btfsc	6,0	;volatile
   454     0049  284B               	goto	u3_21
   455     004A  284C               	goto	u3_20
   456     004B                     u3_21:
   457     004B  2850               	goto	i1l638
   458     004C                     u3_20:
   459     004C                     i1l636:
   460                           
   461                           ;main.c: 85:         TRISD = 0xFF;
   462     004C  30FF               	movlw	255
   463     004D  1683               	bsf	3,5	;RP0=1, select bank1
   464     004E  1303               	bcf	3,6	;RP1=0, select bank1
   465     004F  0088               	movwf	8	;volatile
   466     0050                     i1l638:
   467                           
   468                           ;main.c: 87:     if (0 == ((PORTB >> 1) & 1)) {
   469     0050  1283               	bcf	3,5	;RP0=0, select bank0
   470     0051  0806               	movf	6,w	;volatile
   471     0052  00F0               	movwf	??_ISR
   472     0053  3001               	movlw	1
   473     0054                     u4_25:
   474     0054  1003               	clrc
   475     0055  0CF0               	rrf	??_ISR,f
   476     0056  3EFF               	addlw	-1
   477     0057  1D03               	skipz
   478     0058  2854               	goto	u4_25
   479     0059  1870               	btfsc	??_ISR,0
   480     005A  285C               	goto	u5_21
   481     005B  285D               	goto	u5_20
   482     005C                     u5_21:
   483     005C  2860               	goto	i1l642
   484     005D                     u5_20:
   485     005D                     i1l640:
   486                           
   487                           ;main.c: 88:         TRISD = 0x00;
   488     005D  1683               	bsf	3,5	;RP0=1, select bank1
   489     005E  1303               	bcf	3,6	;RP1=0, select bank1
   490     005F  0188               	clrf	8	;volatile
   491     0060                     i1l642:
   492                           
   493                           ;main.c: 90:     INTCON &= ~(1 << 0);
   494     0060  30FE               	movlw	254
   495     0061  058B               	andwf	11,f	;volatile
   496     0062                     i1l48:
   497     0062  0872               	movf	??_ISR+2,w
   498     0063  008A               	movwf	10
   499     0064  0E71               	swapf	??_ISR+1,w
   500     0065  0083               	movwf	3
   501     0066  0EFE               	swapf	btemp,f
   502     0067  0E7E               	swapf	btemp,w
   503     0068  0009               	retfie
   504     0069                     __end_of_ISR:
   505     0002                     ___latbits      equ	2
   506     007E                     btemp           set	126	;btemp
   507     007E                     wtemp0          set	126
   508                           
   509                           	psect	intentry
   510     0004                     __pintentry:	
   511                           ;incstack = 0
   512                           ; Regs used in _ISR: [wreg+status,2+status,0]
   513                           
   514     0004                     interrupt_function:
   515     007E                     saved_w         set	btemp
   516     0004  00FE               	movwf	btemp
   517     0005  0E03               	swapf	3,w
   518     0006  00F1               	movwf	??_ISR+1
   519     0007  080A               	movf	10,w
   520     0008  00F2               	movwf	??_ISR+2
   521     0009  120A  118A  2846   	ljmp	_ISR
   522                           
   523                           	psect	config
   524                           
   525                           ;Config register CONFIG1 @ 0x2007
   526                           ;	Oscillator Selection bits
   527                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   528                           ;	Watchdog Timer Enable bit
   529                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   530                           ;	Power-up Timer Enable bit
   531                           ;	PWRTE = OFF, PWRT disabled
   532                           ;	RE3/MCLR pin function select bit
   533                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   534                           ;	Code Protection bit
   535                           ;	CP = OFF, Program memory code protection is disabled
   536                           ;	Data Code Protection bit
   537                           ;	CPD = OFF, Data memory code protection is disabled
   538                           ;	Brown Out Reset Selection bits
   539                           ;	BOREN = ON, BOR enabled
   540                           ;	Internal External Switchover bit
   541                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   542                           ;	Fail-Safe Clock Monitor Enabled bit
   543                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   544                           ;	Low Voltage Programming Enable bit
   545                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   546                           ;	In-Circuit Debugger Mode bit
   547                           ;	DEBUG = 0x1, unprogrammed default
   548     2007                     	org	8199
   549     2007  3BD2               	dw	15314
   550                           
   551                           ;Config register CONFIG2 @ 0x2008
   552                           ;	Brown-out Reset Selection bit
   553                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   554                           ;	Flash Program Memory Self Write Enable bits
   555                           ;	WRT = OFF, Write protection off
   556     2008                     	org	8200
   557     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      68
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 26 14:12:59 2025

                      pc 0002                       l36 0021                       u60 0042  
                     u61 0041                       u77 0033                       fsr 0004  
                    l650 001E                      l660 0022                      l652 001F  
                    l644 0013                      l662 002D                      l654 0020  
                    l646 001B                      l664 003A                      l648 001D  
                    l666 003C                      _ISR 0046                      fsr0 0004  
                   ?_ISR 0070                     i1l48 0062                     u3_20 004C  
                   u3_21 004B                     u4_25 0054                     u5_20 005D  
                   u5_21 005C                     _main 0013                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188                    _IOCB0 04B0                    _IOCB1 04B1  
                  i1l640 005D                    i1l642 0060                    i1l634 0046  
                  i1l636 004C                    i1l638 0050                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    main@i 0076  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0046                   ??_main 0073  
                 _ANSELH 0189                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070               __pmaintext 0013  
             __pintentry 0004               __stringtab 0069                  __ptext1 0046  
   end_of_initialization 000F      start_initialization 000F              __end_of_ISR 0069  
              ___latbits 0002                __pstrings 0069        interrupt_function 0004  
            __stringbase 006E      __end_of_segment_map 0079       __end_of__stringtab 006F  
            _segment_map 006F                 intlevel1 0000                stringcode 0069  
               stringdir 0069                 stringtab 0069  
